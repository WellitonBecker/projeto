generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agendamento {
  agecodigo    BigInt   @id(map: "pk_agendamento") @default(autoincrement())
  agesituacao  Int      @default(1) @db.SmallInt
  agevalor     Decimal  @db.Decimal(10, 2)
  agedatahora  DateTime
  usucodigofun BigInt
  empcodigo    BigInt
  sersequencia Int      @db.SmallInt
  usucodigocli BigInt

  funcionarioservico funcionarioservico @relation(fields: [empcodigo, sersequencia, usucodigofun], references: [empcodigo, sersequencia, usucodigo], onDelete: NoAction, onUpdate: NoAction, map: "funcionarioservico_agendamento_fk")
  usuario            usuario            @relation(fields: [usucodigocli], references: [usucodigo], onDelete: NoAction, onUpdate: NoAction, map: "usuario_agendamento_fk")
  feedback           feedback[]
}

model feedback {
  agecodigo    BigInt @id()
  feedescricao String
  feenota      Int    @db.SmallInt

  agendamento agendamento @relation(fields: [agecodigo], references: [agecodigo])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model empresa {
  empcodigo   BigInt @id(map: "pk_empresa") @default(autoincrement())
  empnome     String @db.VarChar(100)
  empemail    String @db.VarChar(200)
  emptelefone String @db.VarChar(15)
  empendereco String @db.VarChar(100)

  funcionarioempresa funcionarioempresa[]
  horariosempresa    horariosempresa[]
  produto            produto[]
  restricoesagenda   restricoesagenda[]
  servico            servico[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model funcionarioempresa {
  usucodigo  BigInt
  empcodigo  BigInt
  fueativo   Int      @default(1) @db.SmallInt
  fuetipo    Int      @db.SmallInt
  fuesalario Decimal? @db.Decimal(10, 2)

  empresa            empresa              @relation(fields: [empcodigo], references: [empcodigo], onDelete: NoAction, onUpdate: NoAction, map: "empresa_funcionarioempresa_fk")
  usuario            usuario              @relation(fields: [usucodigo], references: [usucodigo], onDelete: NoAction, onUpdate: NoAction, map: "usuario_funcionarioempresa_fk")
  funcionarioservico funcionarioservico[]

  @@id([usucodigo, empcodigo], map: "pk_funcionario_empresa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model funcionarioservico {
  usucodigo    BigInt
  empcodigo    BigInt
  sersequencia Int    @db.SmallInt
  fusativo     Int    @db.SmallInt

  agendamento        agendamento[]
  funcionarioempresa funcionarioempresa @relation(fields: [empcodigo, usucodigo], references: [empcodigo, usucodigo], onDelete: NoAction, onUpdate: NoAction, map: "funcionarioempresa_funcionarioservico_fk")
  servico            servico            @relation(fields: [empcodigo, sersequencia], references: [empcodigo, sersequencia], onDelete: NoAction, onUpdate: NoAction, map: "servico_funcionarioservico_fk")

  @@id([usucodigo, empcodigo, sersequencia], map: "pk_funcionarioservico")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model horariosempresa {
  hoediasemana      Int      @db.SmallInt
  empcodigo         BigInt
  hoehorarioinicio  DateTime @db.Time(6)
  hoehorariotermino DateTime @db.Time(6)

  empresa empresa @relation(fields: [empcodigo], references: [empcodigo], onDelete: NoAction, onUpdate: NoAction, map: "empresa_horariosempresa_fk")

  @@id([hoediasemana, empcodigo], map: "pk_horarios_empresa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model produto {
  procodigo          Int    @default(autoincrement()) @db.SmallInt
  empcodigo          BigInt
  prodescricao       String @db.VarChar(100)
  proquantidadeatual Int
  proativo           Int    @default(1) @db.SmallInt

  empresa empresa @relation(fields: [empcodigo], references: [empcodigo], onDelete: NoAction, onUpdate: NoAction, map: "empresa_produto_fk")

  @@id([procodigo, empcodigo], map: "pk_produto")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model restricoesagenda {
  reacodigo         BigInt @id(map: "pk_restricoesagenda") @default(autoincrement())
  reahorarioinicio  String
  reahorariotermino String
  reaativo          Int    @default(1) @db.SmallInt
  reatipo           Int    @default(1) @db.SmallInt
  readata           String
  empcodigo         BigInt

  empresa empresa @relation(fields: [empcodigo], references: [empcodigo], onDelete: NoAction, onUpdate: NoAction, map: "empresa_restricoesagenda_fk")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model servico {
  empcodigo    BigInt
  sersequencia Int     @default(autoincrement()) @db.SmallInt
  serdescricao String  @db.VarChar(100)
  serativo     Int     @default(1) @db.SmallInt
  servalor     Decimal @db.Decimal(10, 2)
  serduracao   Int     @default(30)

  funcionarioservico funcionarioservico[]
  empresa            empresa              @relation(fields: [empcodigo], references: [empcodigo], onDelete: NoAction, onUpdate: NoAction, map: "empresa_servico_fk")

  @@id([empcodigo, sersequencia], map: "pk_servico")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model usuario {
  usucodigo   BigInt  @id(map: "pk_usuario") @default(autoincrement())
  usunome     String  @db.VarChar(100)
  usuemail    String? @unique(map: "usuario_idx_email") @db.VarChar(100)
  usutelefone String? @db.VarChar(15)
  usugoogleid String? @db.VarChar
  ususenha    String? @db.VarChar
  usuendereco String? @db.VarChar(100)
  usutipo     Int     @default(2) @db.SmallInt

  agendamento        agendamento[]
  funcionarioempresa funcionarioempresa[]

  @@index([usunome], map: "usuario_idx_nome")
}
